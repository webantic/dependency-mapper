"use strict";
/** @module util/http */
exports.__esModule = true;
/**
 * @function getBaseParameter
 * @export
 * @summary returns a basic Swagger parameter field
 * @param {*} [{ location, type, required }={}]
 * @returns {Object}
 */
function getBaseParameter(_a) {
    var _b = _a === void 0 ? {} : _a, location = _b.location, type = _b.type, required = _b.required;
    return {
        "in": location,
        type: type,
        required: required,
        name: '',
        description: ''
    };
}
/*
  partially applied body param functions
*/
var getBodyParameter = function (_a) {
    var _b = _a === void 0 ? {} : _a, type = _b.type, required = _b.required;
    return getBaseParameter({ location: 'body', type: type, required: required });
};
var getRequiredBodyParameter = function (_a) {
    var type = (_a === void 0 ? {} : _a).type;
    return getBodyParameter({ required: true, type: type });
};
var getOptionalBodyParameter = function (_a) {
    var type = (_a === void 0 ? {} : _a).type;
    return getBodyParameter({ required: false, type: type });
};
/**
 * @function requiredBodyString
 * @export
 * @summary scaffolds a required body string parameter
 * @param {Object} extendedDef the rest of the definition
 * @returns {Object}
 */
function requiredBodyString(extendedDef) {
    return Object.assign(getRequiredBodyParameter({ type: 'string' }), extendedDef);
}
exports.requiredBodyString = requiredBodyString;
/**
 * @function requiredBodyNumber
 * @export
 * @summary scaffolds a required body number parameter
 * @param {Object} extendedDef the rest of the definition
 * @returns {Object}
 */
function requiredBodyNumber(extendedDef) {
    return Object.assign(getRequiredBodyParameter({ type: 'number' }), extendedDef);
}
exports.requiredBodyNumber = requiredBodyNumber;
/**
 * @function requiredBodyDate
 * @export
 * @summary scaffolds a required body string parameter
 * @param {Object} extendedDef the rest of the definition
 * @returns {Object}
 */
function requiredBodyDate(extendedDef) {
    return Object.assign(getRequiredBodyParameter({ type: 'string' }), { format: 'date-time' }, extendedDef);
}
exports.requiredBodyDate = requiredBodyDate;
/**
 * @function requiredBodyBoolean
 * @export
 * @summary scaffolds a required body boolean parameter
 * @param {Object} extendedDef the rest of the definition
 * @returns {Object}
 */
function requiredBodyBoolean(extendedDef) {
    return Object.assign(getRequiredBodyParameter({ type: 'boolean' }), extendedDef);
}
exports.requiredBodyBoolean = requiredBodyBoolean;
/**
 * @function requiredBodyObject
 * @export
 * @summary scaffolds a required body object parameter
 * @param {Object} extendedDef the rest of the definition
 * @returns {Object}
 */
function requiredBodyObject(extendedDef) {
    return Object.assign(getRequiredBodyParameter({ type: 'object' }), extendedDef);
}
exports.requiredBodyObject = requiredBodyObject;
/**
 * @function optionalBodyString
 * @export
 * @summary scaffolds a optional body string parameter
 * @param {Object} extendedDef the rest of the definition
 * @returns {Object}
 */
function optionalBodyString(extendedDef) {
    return Object.assign(getOptionalBodyParameter({ type: 'string' }), extendedDef);
}
exports.optionalBodyString = optionalBodyString;
/**
 * @function optionalBodyNumber
 * @export
 * @summary scaffolds a optional body number parameter
 * @param {Object} extendedDef the rest of the definition
 * @returns {Object}
 */
function optionalBodyNumber(extendedDef) {
    return Object.assign(getOptionalBodyParameter({ type: 'number' }), extendedDef);
}
exports.optionalBodyNumber = optionalBodyNumber;
/**
 * @function optionalBodyDate
 * @export
 * @summary scaffolds a optional body string parameter
 * @param {Object} extendedDef the rest of the definition
 * @returns {Object}
 */
function optionalBodyDate(extendedDef) {
    return Object.assign(getOptionalBodyParameter({ type: 'string' }), { format: 'date-time' }, extendedDef);
}
exports.optionalBodyDate = optionalBodyDate;
/**
 * @function optionalBodyBoolean
 * @export
 * @summary scaffolds a optional body boolean parameter
 * @param {Object} extendedDef the rest of the definition
 * @returns {Object}
 */
function optionalBodyBoolean(extendedDef) {
    return Object.assign(getOptionalBodyParameter({ type: 'boolean' }), extendedDef);
}
exports.optionalBodyBoolean = optionalBodyBoolean;
/**
 * @function optionalBodyObject
 * @export
 * @summary scaffolds a optional body object parameter
 * @param {Object} extendedDef the rest of the definition
 * @returns {Object}
 */
function optionalBodyObject(extendedDef) {
    return Object.assign(getOptionalBodyParameter({ type: 'object' }), extendedDef);
}
exports.optionalBodyObject = optionalBodyObject;
//# sourceMappingURL=http.js.map