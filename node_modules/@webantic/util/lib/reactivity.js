"use strict";
/// <reference path="../typings/globals/meteor/index.d.ts" />
/** @module util/reactivity */
exports.__esModule = true;
/**
 * Store some data that depends on reactive data sources in a reactive var so as
 * not to recalculate it every time
 * @param getter callback to get the value
 * @param autorunnerOrTemplate
 * @returns {Function} a function that when called returns the latest value of the data
 */
function reactivelyStore(getter, autorunnerOrTemplate) {
    if (!getter) {
        console.error("You must provide a function to retrieve the data");
    }
    if (!autorunnerOrTemplate) {
        console.error('You must provide either an autorun function or a template instance as the second argument to reactivelyStore');
    }
    var autorunner;
    if (typeof autorunnerOrTemplate === 'function') {
        autorunner = autorunnerOrTemplate;
    }
    else {
        autorunner = autorunnerOrTemplate.autorun.bind(autorunnerOrTemplate);
    }
    var reactiveVar = new ReactiveVar(getter());
    autorunner(function () {
        reactiveVar.set(getter());
    });
    return function () { return reactiveVar.get(); };
}
exports.reactivelyStore = reactivelyStore;
//# sourceMappingURL=reactivity.js.map