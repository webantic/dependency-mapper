/** @module util/number */
export { clamp, random, pad };
/**
 * @function clamp
 * @export
 * @summary ensures that a number falls between two
 * others, constraining it if necessary
 * @param {number} val the number to clamp
 * @param {number} min the minimum that the number
 * should be
 * @param {number} max the maximum that the number
 * should be
 * @returns {number} the clamped number
 */
declare function clamp(val: number, min: number, max: number): number;
/**
 * @function random
 * @export
 * @summary Returns a random integer, optionally between an min and max
 * @param {number} [min] The minimum acceptable value
 * @param {number} [max] The maximum acceptable value
 */
declare function random(min?: number, max?: number): number;
/**
 * @function pad
 * @export
 * @summary pads out a number to specified width with specified char or 0
 * @param number
 * @param width
 * @param char
 * @returns {string} the padded number
 */
declare function pad(number: any, width: number, char?: string): string;
